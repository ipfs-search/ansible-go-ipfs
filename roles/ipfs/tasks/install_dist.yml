---
# TODO: Assert platform is amd64 linux
- name: create unarchive path
  file:
    path: "{{ ipfs_unarchive_path }}"
    state: directory
    mode: 0755
    owner: "{{ ipfs_install_user }}"
- name: get IPFS binary
  block:
  - name: download dist file
    import_role:
      name: ipfs_download
  - name: unarchive '{{ ipfs_download_path }}'
    unarchive:
      remote_src: true
      src: "{{ ipfs_download_path }}"
      dest: "{{ ipfs_unarchive_path }}"
      include: "{{ ipfs_unarchive_filename }}"
    when: ipfs_download is changed or not ipfs_binary_stat.stat.exists
    register: ipfs_unarchive
  become: true
  become_user: "{{ ipfs_install_user }}"
- name: install '{{ ipfs_binary }}'
  copy:
    src: "{{ ipfs_unarchive_path }}/{{ ipfs_unarchive_filename }}"
    dest: "{{ ipfs_binary }}"
    remote_src: true
    mode: 0755
    owner: root
    group: root
  when: ipfs_unarchive is changed
  notify: restart ipfs
